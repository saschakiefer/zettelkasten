name: EarlyAccess

on:
  push:
    branches: [ main ]

jobs:
  # Build native executable per runner
  build:
    name: 'Build with Graal on ${{ matrix.os }}'
    if: github.repository == 'saschakiefer/zettelkasten' && startsWith(github.event.head_commit.message, 'üèÅ Releasing version') != true && startsWith(github.event.head_commit.message, '‚¨ÜÔ∏è  Next version') != true
    strategy:
      fail-fast: true
      matrix:
        os: [ macOS-latest ]
    runs-on: ${{ matrix.os }}

    steps:
      - name: 'Check out repository'
        uses: actions/checkout@v2

      - name: 'Set up Graal'
        uses: graalvm/setup-graalvm@v1
        with:
          version: '22.1.0'
          java-version: '17'
          components: 'native-image'
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: 'Cache Maven packages'
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: 'Build Native Image'
        run: ./mvnw clean package -DskipTests -B -Dnative --file pom.xml

      - name: Extract Maven project version
        run: echo ::set-output name=version::$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)
        id: project

      - name: Run UPX
        uses: svenstaro/upx-action@v2
        with:
          file: bootstrap/target/bootstrap-${{ steps.project.outputs.version }}-runner
          args: '-7'

      - name: 'Create distribution'
        run: ./mvnw -B --file pom.xml -pl bootstrap -am -Pdist package

      - name: 'Upload build artifact'
        uses: actions/upload-artifact@v2
        with:
          name: artifacts
          path: |
            bootstrap/target/distributions/*.zip
            bootstrap/target/distributions/*.tar.gz

  # Collect all executables and release
  release:
    needs: [ build ]
    runs-on: ubuntu-latest

    steps:
      - name: 'Check out repository'
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: 'Download all build artifacts'
        uses: actions/download-artifact@v2

      - name: 'Set up Java'
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'zulu'

      - name: 'Cache Maven packages'
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: 'Release with JReleaser'
        env:
          JRELEASER_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./mvnw --file pom.xml -Prelease -DartifactsDir=artifacts jreleaser:full-release